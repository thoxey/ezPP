#ifndef EZEFFECT_H
#define EZEFFECT_H
#ifndef __APPLE__
#include <GL/glew.h>
#include <GL/gl.h>
#else
#include <gl3.h>
#endif
#include <string>
#include <sstream>
#include <vector>
#include <iostream>
#include <fstream>
#include <streambuf>
//----------------------------------------------------------------------------------------------------------------------
/// @file ezEffect.h
/// @brief The parent class for all of the implementable effects
/// @author Tom Hoxey
/// @version 1.0
/// @date 20/3/17 Initial version
//----------------------------------------------------------------------------------------------------------------------

class ezEffect
{
public:
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief The ctor for the ezEffect class
  //----------------------------------------------------------------------------------------------------------------------
  ezEffect();
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief The dtor for the ezEffect class
  //----------------------------------------------------------------------------------------------------------------------
  virtual ~ezEffect();
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Compiles the shader into a GL program ready for use later
  //----------------------------------------------------------------------------------------------------------------------
  void ezCompileEffect();
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Returns m_ShaderProg
  //----------------------------------------------------------------------------------------------------------------------
  const GLuint &getShaderProg() const noexcept;

protected:
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief The string that stores the source to be inserted into the frag shader
  //----------------------------------------------------------------------------------------------------------------------
  std::string m_FragSource;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief The source for the vertex shader it just passes on the texture coordinates
  //----------------------------------------------------------------------------------------------------------------------
  static const std::string m_VertSource;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Checks the shader is valid before compiling
  //----------------------------------------------------------------------------------------------------------------------
  bool debugShader(GLint shader);
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief The shader program for
  //----------------------------------------------------------------------------------------------------------------------
  GLuint m_ShaderProg;
};

#endif // EZEFFECT_H
