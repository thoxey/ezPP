#ifndef EZEFFECT_H
#define EZEFFECT_H
///#include <glm/gtc/type_ptr.hpp>
#ifndef __APPLE__
#include <GL/gl.h>
#else
#include <gl3.h>
#endif
#include <string>
#include <sstream>

//----------------------------------------------------------------------------------------------------------------------
/// @file ezEffect.h
/// @brief The parent class for all of the implementable effects
/// @author Tom Hoxey
/// @version 1.0
/// @date 20/3/17 Initial version
//----------------------------------------------------------------------------------------------------------------------

class ezEffect
{
public:
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief The ctor for the ezEffect class
  //----------------------------------------------------------------------------------------------------------------------
  ezEffect();
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Returns m_changePixelVals
  //----------------------------------------------------------------------------------------------------------------------
  std::string getPixelValChange();
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Returns m_changePixelVals
  //----------------------------------------------------------------------------------------------------------------------
  std::string getPixelCalc();
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief The unique id that ensures multiple copies of the same effect cant be made (Left without constso the user could change if they wanted)
  //----------------------------------------------------------------------------------------------------------------------
  int ezID = 0;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Returns 'm_IsComplex'
  //----------------------------------------------------------------------------------------------------------------------
  bool getIsComplex();


protected:
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief a bool for the children to determine whether the effect needs to know its neighbors values (Kernel based)
  //----------------------------------------------------------------------------------------------------------------------
  bool m_isComplex;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief The string that stores the source to be inserted into the frag shader
  //----------------------------------------------------------------------------------------------------------------------
  std::string m_changePixelVals = "";
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief The string that stores the source to be inserted into the frag shader
  //----------------------------------------------------------------------------------------------------------------------
  std::string m_calcPixelVals = "";
private:
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief the RGB change to be applied to each pixel, likely to change form
  //----------------------------------------------------------------------------------------------------------------------
  //glm::vec3 m_RGBchange;

};

#endif // EZEFFECT_H
